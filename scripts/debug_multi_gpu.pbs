#!/bin/bash
#PBS -N debug_multi_gpu_run
#PBS -l select=1:ncpus=4:mem=64gb:ngpus=4:gpu_type=L40S
#PBS -l walltime=01:00:00
#PBS -o logs/debug_multi_gpu_run.log
#PBS -e logs/debug_multi_gpu_run.log

echo "Starting job at $(date)"
start_time=$(date +%s)

# Check if logs directory exists and is writable
LOG_DIR="/rds/general/user/gts124/home/Efficient-LLMs/logs"
if [ ! -d "$LOG_DIR" ]; then
    echo "Error: Log directory does not exist: $LOG_DIR"
    exit 1
fi
if [ ! -w "$LOG_DIR" ]; then
    echo "Error: Log directory is not writable: $LOG_DIR"
    exit 1
fi


# Load the conda environment
echo "Sourcing Conda script..."
source $HOME/miniconda3/etc/profile.d/conda.sh || { echo "Failed to source Conda script"; exit 1; }
echo "Activating environment lingua_250608..."
conda activate lingua_250608 || { echo "Failed to activate Conda environment"; exit 1; }
echo "Environment activated: $(conda info --envs | grep '*')"


# Navigate to the Efficient-LLMs repo directory
REPO_DIR="/rds/general/user/gts124/home/Efficient-LLMs"
echo "Changing directory to $REPO_DIR..."
cd $REPO_DIR || { echo "Failed to change directory to $REPO_DIR"; exit 1; }
echo "Current directory: $(pwd)"


# Check if the config file exists
CONFIG_FILE="apps/main/configs/debug.yaml"
if [ ! -f "$CONFIG_FILE" ]; then
    echo "Error: Config file not found: $CONFIG_FILE"
    exit 1
fi


# Check if the training script exists
TRAIN_SCRIPT="apps/main/train.py"
if [ ! -f "$TRAIN_SCRIPT" ]; then
    echo "Error: Training script not found: $TRAIN_SCRIPT"
    exit 1
fi

# Check GPU count and types
echo "Checking GPU availability..."
if command -v nvidia-smi >/dev/null 2>&1; then
    gpu_count=$(nvidia-smi -L | wc -l)
    gpu_types=$(nvidia-smi -L | awk -F 'GPU [0-9]+: ' '{print $2}' | sort -u | paste -sd, -)
    echo "Allocated $gpu_count GPU(s) of type(s): $gpu_types"
else
    echo "Error: nvidia-smi not found, cannot determine GPU information"
    # exit 1
fi


# Run a multi GPU job using torchrun instead of python
echo "Running torchrun script..."
torchrun --nproc-per-node=4 -m apps.main.train config=apps/main/configs/debug.yaml || { echo "Training script failed"; exit 1; }


echo "Job completed at $(date)"

# Calculate and display elapsed time for job
end_time=$(date +%s)
elapsed_time=$((end_time - start_time))
hours=$((elapsed_time / 3600))
minutes=$(( (elapsed_time % 3600) / 60 ))
seconds=$((elapsed_time % 60))
echo "Elapsed time: ${hours}h ${minutes}m ${seconds}s"